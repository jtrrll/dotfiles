---
name: CI

on:
  pull_request:
    branches: [ "*" ]
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 06 * * MON'
  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  activate:
    name: Activate
    strategy:
      fail-fast: false
      matrix:
        configuration: [default, work]
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Free disk space
        if: runner.os == 'Linux'
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_dotnet: true
          remove_haskell: true
          remove_packages: "azure-cli microsoft-edge-stable google-chrome-stable firefox postgresql* *llvm* mysql*"
          testing: false
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Activate ${{ matrix.configuration }} configuration
        run: nix run . ${{ matrix.configuration }}
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        configuration: [default, work]
        os: [macos-latest, ubuntu-latest, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Free disk space
        if: runner.os == 'Linux'
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_dotnet: true
          remove_haskell: true
          remove_packages: "azure-cli microsoft-edge-stable google-chrome-stable firefox postgresql* *llvm* mysql*"
          testing: false
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Build ${{ matrix.configuration }} configuration
        run: nix build --impure .#homeConfigurations.${{ matrix.configuration }}.activationPackage
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Check flake
        run: nix flake check --impure
...
